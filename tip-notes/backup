#!/usr/bin/env bash
#===============================================================================
#
#   DESCRIPTION: creates a notes folder backup & configuration backup
# 
#         USAGE: ./backup --help
#                
#        AUTHOR: S. Falcao
#       CREATED: 15.08.2020 12:09
#
#===============================================================================

# Copyright (C) 2020 tip-notes authors.
#
# This file is part of tip-notes.
#
#     tip-notes is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     tip-notes is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with Foobar.  If not, see <https://www.gnu.org/licenses/>



#set -o errexit
set -o nounset
set -o pipefail
#set -o xtrace


#-------------------------------------------------------------------------------
# CONFIGURATION SECTION
#-------------------------------------------------------------------------------
#
script_name=$(basename "${0}")

link_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
linked_script=$(readlink "${link_dir}/${script_name}")
if [[ -z "${linked_script}" ]]; then
    executables_dir="${link_dir}"
else
    executables_dir=$(dirname "${linked_script}")
fi
# shellcheck source=./project-header.sh
source "${executables_dir}/project-header.sh"
# shellcheck source=./tip-lib.sh
source "${executables_dir}/tip-lib.sh"



if [[ -f "${HEADER___PROJECT_CONFIG_FILE}" ]]; then
    # shellcheck source=/home/falcao/.config/tip-notes/tiprc
    source "${HEADER___PROJECT_CONFIG_FILE}"
else
    print_error "ERROR: --> configuration file does not exist!"
    exit 1
fi


#-------------------------------------------------------------------------------'
# MAIN SECTION'
#-------------------------------------------------------------------------------'

if [[ ! -d "${RC___TIP_BACKUP_FOLDER}" ]]; then
    if [ "${RC___TIP_CONFIRM_TO_CREATE_BACKUP_FOLDER}" == true ]; then
        echo "tip-notes backup folder does not exist!"
        read -r -p "Do you like to create it now? Type 'y' or 'n' :" answer
        if [[ ! "${answer}" =~ [Y|y] ]]; then
            print_error "ERROR: tip backup folder creation aborted by user!"
            exit 1
        fi
    fi
    mkdir "${RC___TIP_BACKUP_FOLDER}"
fi

if [[ "${#}" -eq 0 ]]; then
    behaviour="${RC___TIP_BACKUP_BEHAVIOUR}"
elif [[ "${#}" -eq 1 ]]; then
    behaviour="${1}"
else
    print_error "ERROR: unexpected number of parameters!"
    exit 1
fi

tip_backup_time_stamp="$(date '+%Y%m%d-%H%M%S-')"

tip_backup_file_prefix="${RC___TIP_BACKUP_FOLDER}"
tip_backup_file_prefix+="/${tip_backup_time_stamp}"
tip_backup_file_prefix+="tip-notes-backup_-_"

if [[ "${behaviour}" == '--all' ]];then
    tip_backup_file_sufix='all.tar'
    tar -cvf \
        "${tip_backup_file_prefix}${tip_backup_file_sufix}" \
        "${HEADER___PROJECT_CONFIG_FOLDER}" "${RC___TIP_NOTES_FOLDER}" \
        &> /dev/null
elif [[ "${behaviour}" == '--config-only' ]];then
    tip_backup_file_sufix='config-only.tar'
    tar -cvf \
        "${tip_backup_file_prefix}${tip_backup_file_sufix}" \
        "${HEADER___PROJECT_CONFIG_FOLDER}" \
        &> /dev/null
        echo 'WARNING --> only configurations have been saved!'
elif [[ "${behaviour}" == '--notes-only' ]];then
    tip_backup_file_sufix='notes-only.tar'
    tar -cvf \
        "${tip_backup_file_prefix}${tip_backup_file_sufix}" \
        "${RC___TIP_NOTES_FOLDER}" \
        &> /dev/null
        echo 'WARNING --> only notes have been saved!'
else
    print_error "ERROR: unknown backup parameter!"
    exit 1
fi

gzip "${tip_backup_file_prefix}${tip_backup_file_sufix}"
exit 0
