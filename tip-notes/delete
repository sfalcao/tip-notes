#!/usr/bin/env bash
#===============================================================================
#
#   DESCRIPTION: deletes a note
# 
#         USAGE: ./delete <note>
#                
#        AUTHOR: S. Falcao
#       CREATED: 24.01.2021 15:10

#===============================================================================

# Copyright (C) 2020 tip-notes authors.
#
# This file is part of tip-notes.
#
#     tip-notes is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     tip-notes is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with Foobar.  If not, see <https://www.gnu.org/licenses/>



#set -o errexit
set -o nounset
set -o pipefail
#set -o xtrace


#-------------------------------------------------------------------------------
# CONFIGURATION SECTION
#-------------------------------------------------------------------------------
#
script_name=$(basename "${0}")

link_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
linked_script=$(readlink "${link_dir}/${script_name}")
if [[ -z "${linked_script}" ]]; then
    executables_dir="${link_dir}"
else
    executables_dir=$(dirname "${linked_script}")
fi
# shellcheck source=./project-header.sh
source "${executables_dir}/project-header.sh"
# shellcheck source=./tip-lib.sh
source "${executables_dir}/tip-lib.sh"

# if exist a config file, source it, otherwise prints an error
# message, unless $1 is --config-init
if [[ -f "${HEADER___PROJECT_CONFIG_FILE}" ]]; then
    # shellcheck source=/home/falcao/.config/tip-notes/tiprc
    source "${HEADER___PROJECT_CONFIG_FILE}"
else
    if [[ "${#}" -eq 0 ]] || [[ "${1}" != '--init' ]]; then
        print_error "ERROR: --> configuration file does not exist!"
        exit 1
    fi
fi



#-------------------------------------------------------------------------------
# MAIN SECTION
#-------------------------------------------------------------------------------
#

if [[ ${#} -ne 1 ]]; then
    print_error "ERROR: --delete option waits for a note name"
    exit 1
fi

note_file="${RC___TIP_NOTES_FOLDER}/${1}"
if [[ -f "${note_file}" ]]; then
    if [ "${RC___TIP_TO_CONFIRM_BEFORE_DELETE_NOTE}" = true ]; then

        read -r -p "Are you sure? (y/n): " answer
        if ! [[ "${answer}" =~ [y|Y] ]]; then
            print_error "reset operation aborted by user!"
            exit 1
        fi

    fi
    rm "${note_file}"
else
    print_error "ERROR: no ${1} note to be removed!"
    exit 1
fi
find "${RC___TIP_NOTES_FOLDER}" -type d -empty -delete

exit 0
