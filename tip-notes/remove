#!/bin/bash
#==============================================================================
#
#   DESCRIPTION:  remove tip-notes
#
#         USAGE:  ./remove
# 
#        AUTHOR:  S. Falcao
#       CREATED:  11.07.2020 16:09 BRST
#
#==============================================================================

script_name=$(basename "${0}")

exit_status=0


link_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
linked_script=$(readlink "${link_dir}/${script_name}")
if [[ -z "${linked_script}" ]]; then
    executables_dir="${link_dir}"
else
    executables_dir=$(dirname "${linked_script}")
fi
# shellcheck source=./project-header.sh
source "${executables_dir}/project-header.sh"
# shellcheck source=./tip-lib.sh
source "${executables_dir}/tip-lib.sh"



# if parameters are passed shows help
if [[ "${#}" -gt 0 ]] && [[ "${1}" != "--purge" ]]; then
    print_error "ERROR: unexpected argument!"
    exit 1
fi


# aborts if already installed by apt
if apt list --installed 2> /dev/null | grep 'tip-notes'; then
    print_error
    print_error "ATTENTION!"
    print_error
    print_error\
    print_error"${HEADER___PROJECT_NAME} has been installed using apt system's"\
    print_error"package manager!"
    print_error
    if [[ "${1}" == "--purge" ]]; then
        print_error "Purge installed version using:"
        print_error "sudo apt purge tip-notes"
    else
        print_error "Remove installed version using:"
        print_error "sudo apt remove tip-notes"
    fi
    print_error
    exit 1
fi




read -r -p "Are you sure? (y/n): " answer
if ! [[ "${answer}" =~ [y|Y] ]]; then
    print_error "remove operation aborted by user!"
    exit 1
fi


# remove files and folders destination
if ! rm -r "${HEADER___PROJECT_EXECUTABLES_FOLDER}"; then
    exit_status=1
fi

# remove autocompletion file
# TODO: expand to remove also fish autocompletion
if ! rm "${HEADER___PROJECT_AUTOCOMPLETION_FILE}"; then
    exit_status=1
fi

# remove links
if ! rm "${HEADER___PROJECT_LINKS_FOLDER}/tip"; then
    exit_status=1
fi

# remove docs
if ! rm -r "${HEADER___PROJECT_DOC_FOLDER}"; then
    exit_status=1
fi

# remove man page
if ! rm -r /usr/local/man/man1/tip.1.gz; then
    exit_status=1
fi

# purge files if required
if [[ "${1}" == "--purge" ]]; then
    if ! rm -r "${HEADER___PROJECT_CONFIG_FOLDER}"; then
        exit_status=1
    fi
fi

exit "${exit_status}"
